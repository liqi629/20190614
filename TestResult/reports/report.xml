<?xml version="1.0" encoding="utf-8"?><testsuite errors="0" failures="10" name="pytest" skipped="1" tests="30" time="302.381"><testcase classname="TestCase.test_1_login.TestLogin" file="TestCase\test_1_login.py" line="14" name="test_login_1_error[data0]" time="4.693"><system-out>============session级别的会话=====开始=====================
============整个测试类只执行一次的前置======================
============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)中输入文本：admin
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)中输入文本：12a3
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-switch_alert-[line:174]alert出现，内容为：用户名或密码错误!
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-switch_alert-[line:176]alert已经关闭
</system-err></testcase><testcase classname="TestCase.test_1_login.TestLogin" file="TestCase\test_1_login.py" line="14" name="test_login_1_error[data1]" time="0.252"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.05：以秒为单位
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)中输入文本：abac
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)中输入文本：123a4
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-switch_alert-[line:174]alert出现，内容为：用户名或密码错误!
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-switch_alert-[line:176]alert已经关闭
</system-err></testcase><testcase classname="TestCase.test_1_login.TestLogin" file="TestCase\test_1_login.py" line="21" name="test_login_2_sucess" time="10.454"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
============整个测试类只执行一次的后置======================
</system-out><system-err>Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)中输入文本：auto_test_2
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)中输入文本：123456
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)
Fri, 14 Jun 2019 14:33:16-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:23-INFO-BasePage.py-switch_alert-[line:179]未弹出alert
Fri, 14 Jun 2019 14:33:23-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//i[@class=&quot;entypo-user user&quot;]&apos;)
Fri, 14 Jun 2019 14:33:23-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="15" name="test_1_home_to_data_source" time="14.007"><system-out>============整个测试类只执行一次的前置======================
============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)中输入文本：auto_test_2
Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)
Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)中输入文本：123456
Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)
Fri, 14 Jun 2019 14:33:31-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:36-INFO-BasePage.py-switch_alert-[line:179]未弹出alert
Fri, 14 Jun 2019 14:33:36-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:36-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:33:36-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:36-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:33:36-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;数据源管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:37-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.58：以秒为单位
Fri, 14 Jun 2019 14:33:37-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;数据源管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:37-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;数据源管理&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:40-INFO-BasePage.py-switch_iframe-[line:148]iframe切换操作：
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-switch_iframe-[line:152]切换成功
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ol[@class=&quot;breadcrumb bc-3&quot;]//*[text()=&quot;数据源管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="21" name="test_2_home_to_operation_system" time="0.924"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.01：以秒为单位
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:41-INFO-BasePage.py-switch_iframe-[line:148]iframe切换操作：
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-switch_iframe-[line:152]切换成功
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//strong[text()=&quot;业务系统管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="26" name="test_3_add_operation_system" time="3.021"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.01：以秒为单位
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.01：以秒为单位
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-switch_iframe-[line:148]iframe切换操作：
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-switch_iframe-[line:152]切换成功
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[@id=&quot;add&quot;]&apos;)
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;add&quot;]&apos;)
Fri, 14 Jun 2019 14:33:42-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;add&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;zhName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;zhName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;zhName&quot;]&apos;)中输入文本：功能自动化测试一
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;code&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;code&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;code&quot;]&apos;)中输入文本：123456789
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;shortZhName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;shortZhName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;shortZhName&quot;]&apos;)中输入文本：自动化测试一
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;enName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;enName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;enName&quot;]&apos;)中输入文本：uiAutoTestOne
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;shortEnName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;shortEnName&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;shortEnName&quot;]&apos;)中输入文本：autoTestOne
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;remark&quot;]&apos;)
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:43-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;remark&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;remark&quot;]&apos;)中输入文本：这个业务系统是用来做自动化测试的，请勿删除
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;version&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;version&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;]//input[ @ id = &quot;version&quot;]&apos;)中输入文本：1.0
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;dept&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;dept&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;dept&quot;]&apos;)中输入文本：产品质量保障部
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;contactor&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;contactor&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;contactor&quot;]&apos;)中输入文本：产品测试员一
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;mobile&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;mobile&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;mobile&quot;]&apos;)中输入文本：18610430001
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;email&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;email&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // input[ @ id = &quot;email&quot;]&apos;)中输入文本：li.qi@yoyosys.com.cn
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // button[@class =&quot;btn btn-primary btn-add&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // button[@class =&quot;btn btn-primary btn-add&quot;]&apos;)
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;// div[ @ id = &quot;addModalTable&quot;] // button[@class =&quot;btn btn-primary btn-add&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//*[text()=&quot;功能自动化测试一&quot;]&apos;)
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.53：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="31" name="test_3_delete_operation_system" time="8.970"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;业务管理&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.53：以秒为单位
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;应用管理&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:45-INFO-BasePage.py-switch_iframe-[line:148]iframe切换操作：
Fri, 14 Jun 2019 14:33:46-INFO-BasePage.py-switch_iframe-[line:152]切换成功
Fri, 14 Jun 2019 14:33:46-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//*[text()=&quot;功能自动化测试一&quot;]//parent::tr//*[text()=&quot;删除&quot;]&apos;)
Fri, 14 Jun 2019 14:33:46-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:46-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//*[text()=&quot;功能自动化测试一&quot;]//parent::tr//*[text()=&quot;删除&quot;]&apos;)
Fri, 14 Jun 2019 14:33:46-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//*[text()=&quot;功能自动化测试一&quot;]//parent::tr//*[text()=&quot;删除&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:48-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;// div[ @id=&quot;deleteModalTable&quot;]//button[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:33:48-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:48-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;// div[ @id=&quot;deleteModalTable&quot;]//button[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:33:48-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;// div[ @id=&quot;deleteModalTable&quot;]//button[text()=&quot;确定&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:50-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//*[text()=&quot;功能自动化测试一&quot;]&apos;)
Fri, 14 Jun 2019 14:33:53-ERROR-BasePage.py-wait_eleVisible-[line:39]等待元素可见失败。
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-33-53.png
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="38" name="test_4_home_to_script" time="2.280"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:54-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:55-INFO-BasePage.py-switch_iframe-[line:148]iframe切换操作：
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-switch_iframe-[line:152]切换成功
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ol[@class=&quot;breadcrumb bc-3&quot;]//*[text()=&quot;脚本管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="43" name="test_5_add_script" time="5.829"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.01：以秒为单位
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:56-INFO-BasePage.py-switch_iframe-[line:148]iframe切换操作：
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-switch_iframe-[line:152]切换成功
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[@id=&quot;add&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;add&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;add&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;name&quot;]&apos;)中输入文本：auto_script_01.sh
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;scriptPath&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;scriptPath&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@id=&quot;scriptPath&quot;]&apos;)中输入文本：/opt/auto_script_01.sh
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//form[@id=&quot;addForm&quot;]//select[@id=&quot;scriptType&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@id=&quot;addForm&quot;]//select[@id=&quot;scriptType&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//form[@id=&quot;addForm&quot;]//select[@id=&quot;dbType&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@id=&quot;addForm&quot;]//select[@id=&quot;dbType&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//textarea[@id=&quot;scriptContent&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//textarea[@id=&quot;scriptContent&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//textarea[@id=&quot;scriptContent&quot;]&apos;)中输入文本：#!/usr/bin/bash            echo &quot;hello me&quot;            echo&gt;/root/testfile_01.txt
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@class=&quot;proval form-control&quot;]&apos;)
Fri, 14 Jun 2019 14:33:57-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//input[@class=&quot;proval form-control&quot;]&apos;)中输入文本：172.16.12.28
Fri, 14 Jun 2019 14:34:00-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//button[text()=&quot;提交&quot;]&apos;)
Fri, 14 Jun 2019 14:34:00-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;addModalTable&quot;]//button[text()=&quot;提交&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//td[text()=&quot;auto_script_01.sh&quot;]&apos;)
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="47" name="test_6_del_script" time="2.129"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;作业设计&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.53：以秒为单位
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)
Fri, 14 Jun 2019 14:34:02-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;脚本管理&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:03-INFO-BasePage.py-switch_iframe-[line:148]iframe切换操作：
Fri, 14 Jun 2019 14:34:03-INFO-BasePage.py-switch_iframe-[line:152]切换成功
Fri, 14 Jun 2019 14:34:03-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//td[text()=&quot;auto_script_01.sh&quot;]//parent::tr//*[text()=&quot;删除&quot;]&apos;)
Fri, 14 Jun 2019 14:34:03-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:03-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//td[text()=&quot;auto_script_01.sh&quot;]//parent::tr//*[text()=&quot;删除&quot;]&apos;)
Fri, 14 Jun 2019 14:34:03-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//td[text()=&quot;auto_script_01.sh&quot;]//parent::tr//*[text()=&quot;删除&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:03-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@id=&quot;deleteModalTable&quot;]//button[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:34:04-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:04-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;deleteModalTable&quot;]//button[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:34:04-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//div[@id=&quot;deleteModalTable&quot;]//button[text()=&quot;确定&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:04-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//td[text()=&quot;auto_script_01.sh&quot;]&apos;)
Fri, 14 Jun 2019 14:34:04-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_2_home.TestHome" file="TestCase\test_2_home.py" line="52" name="test_5_home_jump_designer" time="2.051"><skipped message="unconditional skip" type="pytest.skip">TestCase\test_2_home.py:52: unconditional skip</skipped><system-out>============整个测试类只执行一次的后置======================
</system-out></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="20" name="test_1_none_name" time="17.103"><system-out>============整个测试类只执行一次的前置======================
============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)
Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;name&quot;]&apos;)中输入文本：auto_test_2
Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)
Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;inputPassword&quot;]&apos;)中输入文本：123456
Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)
Fri, 14 Jun 2019 14:34:11-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;login&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:18-INFO-BasePage.py-switch_alert-[line:179]未弹出alert
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-clear_input_text-[line:96]None：清除元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)中输入文本：
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btnBusinessAdd&quot;]&apos;)
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btnBusinessAdd&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:22-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-get_text-[line:109]None:获取元素:(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)的文本内容
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-get_text-[line:112]None:元素:(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)的文本内容为:业务名称不能为空!
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="25" name="test_2_add_job" time="1.764"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:23-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-clear_input_text-[line:96]None：清除元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)中输入文本：auto_test_2222
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btnBusinessAdd&quot;]&apos;)
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btnBusinessAdd&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:24-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.53：以秒为单位
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.01：以秒为单位
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-get_text-[line:109]None:获取元素:(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)的文本内容
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-get_text-[line:112]None:元素:(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)的文本内容为:业务添加成功!
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="32" name="test_3_same_name" time="1.219"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//img[@id=&quot;addBgBac&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:25-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-clear_input_text-[line:96]None：清除元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;bisName&quot;]&apos;)中输入文本：auto_test_2222
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btnBusinessAdd&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btnBusinessAdd&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.01：以秒为单位
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_text-[line:109]None:获取元素:(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)的文本内容
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_text-[line:112]None:元素:(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)的文本内容为:作业名称重复，请重新修改
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="38" name="test_4_add_data_source" time="10.827"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;数据源&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;数据源&quot;]&apos;)
Fri, 14 Jun 2019 14:34:26-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;数据源&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;添加&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;添加&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;添加&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[@id=&quot;dataTree_1_switch&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[@id=&quot;dataTree_1_switch&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[@id=&quot;dataTree_1_switch&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;MySQL&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;MySQL&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;MySQL&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-db-type&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-db-type&quot;]&apos;)
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-db-type&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-switch_window-[line:201]切换到最新打开的窗口
Fri, 14 Jun 2019 14:34:27-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//button[@id=&quot;addSource&quot;]&apos;)
Fri, 14 Jun 2019 14:34:28-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长1.03：以秒为单位
Fri, 14 Jun 2019 14:34:29-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//button[@id=&quot;addSource&quot;]&apos;)
Fri, 14 Jun 2019 14:34:29-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//button[@id=&quot;addSource&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;sourceName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;sourceName&quot;]&apos;)中输入文本：自动化测试数据源一
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;ip&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;ip&quot;]&apos;)中输入文本：172.16.12.28
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;port&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;port&quot;]&apos;)中输入文本：3306
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;userName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;userName&quot;]&apos;)中输入文本：root
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;passWord&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;passWord&quot;]&apos;)中输入文本：root
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;dbName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;dbName&quot;]&apos;)中输入文本：echod
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//a[@id=&quot;test-connect&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//a[@id=&quot;test-connect&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;连接成功&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.53：以秒为单位
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:30-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:31-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@data-name=&quot;AUTO_test_01&quot;]&apos;)
Fri, 14 Jun 2019 14:34:31-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:31-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@data-name=&quot;AUTO_test_01&quot;]&apos;)
Fri, 14 Jun 2019 14:34:31-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//input[@data-name=&quot;AUTO_test_01&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:32-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:32-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:32-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:32-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:32-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:32-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:33-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:34:33-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:33-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:34:33-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;确定&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:35-INFO-BasePage.py-switch_window-[line:206]切换到第一个窗口
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;保存&quot;]&apos;)
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;保存&quot;]&apos;)
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;保存&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-relation-add&quot;]&apos;)
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-relation-add&quot;]&apos;)
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-relation-add&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:36-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[text()=&quot;更新映射成功&quot;]&apos;)
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="43" name="test_5_add_target_source" time="10.677"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;目标&quot;]&apos;)
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;目标&quot;]&apos;)
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;目标&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;添加&quot;]&apos;)
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;添加&quot;]&apos;)
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;添加&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:37-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[@id=&quot;dataTree_1_switch&quot;]&apos;)
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[@id=&quot;dataTree_1_switch&quot;]&apos;)
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[@id=&quot;dataTree_1_switch&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;MySQL&quot;]&apos;)
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;MySQL&quot;]&apos;)
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;MySQL&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-db-type&quot;]&apos;)
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-db-type&quot;]&apos;)
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-db-type&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-switch_window-[line:201]切换到最新打开的窗口
Fri, 14 Jun 2019 14:34:38-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//button[@id=&quot;addSource&quot;]&apos;)
Fri, 14 Jun 2019 14:34:39-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长1.04：以秒为单位
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//button[@id=&quot;addSource&quot;]&apos;)
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//button[@id=&quot;addSource&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;sourceName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;sourceName&quot;]&apos;)中输入文本：自动化测试目标源一
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;ip&quot;]&apos;)
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;ip&quot;]&apos;)中输入文本：172.16.12.28
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;port&quot;]&apos;)
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;port&quot;]&apos;)中输入文本：3306
Fri, 14 Jun 2019 14:34:40-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;userName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;userName&quot;]&apos;)中输入文本：root
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;passWord&quot;]&apos;)
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;passWord&quot;]&apos;)中输入文本：root
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;dbName&quot;]&apos;)
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//input[@id=&quot;dbName&quot;]&apos;)中输入文本：echod
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//a[@id=&quot;test-connect&quot;]&apos;)
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//form[@name=&quot;sameTOMysqlDriver&quot;]//a[@id=&quot;test-connect&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;连接成功&quot;]&apos;)
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:41-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:42-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@data-name=&quot;AUTO_test_02&quot;]&apos;)
Fri, 14 Jun 2019 14:34:42-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:42-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@data-name=&quot;AUTO_test_02&quot;]&apos;)
Fri, 14 Jun 2019 14:34:42-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//input[@data-name=&quot;AUTO_test_02&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:42-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:42-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:43-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:43-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:43-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)
Fri, 14 Jun 2019 14:34:43-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;下一步&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:44-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:34:44-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:44-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;确定&quot;]&apos;)
Fri, 14 Jun 2019 14:34:44-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[text()=&quot;确定&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:45-INFO-BasePage.py-switch_window-[line:206]切换到第一个窗口
Fri, 14 Jun 2019 14:34:46-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;保存&quot;]&apos;)
Fri, 14 Jun 2019 14:34:46-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:34:46-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;保存&quot;]&apos;)
Fri, 14 Jun 2019 14:34:46-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;保存&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:46-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-relation-add&quot;]&apos;)
Fri, 14 Jun 2019 14:34:47-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:47-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-relation-add&quot;]&apos;)
Fri, 14 Jun 2019 14:34:47-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-relation-add&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:47-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[text()=&quot;更新映射成功&quot;]&apos;)
Fri, 14 Jun 2019 14:34:47-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.53：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="49" name="test_6_edit_job_name" time="12.069"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.05：以秒为单位
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2222&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[@class=&quot;fa fa-edit btn-edit-business&quot;]&apos;)
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[@class=&quot;fa fa-edit btn-edit-business&quot;]&apos;)
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[@class=&quot;fa fa-edit btn-edit-business&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:58-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//input[@id=&quot;editBus&quot;]&apos;)
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.54：以秒为单位
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;editBus&quot;]&apos;)
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-clear_input_text-[line:96]None：清除元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;editBus&quot;]&apos;)
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//input[@id=&quot;editBus&quot;]&apos;)
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-input_text-[line:58]None：在元素(&apos;xpath&apos;, &apos;//input[@id=&quot;editBus&quot;]&apos;)中输入文本：auto_test_2223
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-edit&quot;]&apos;)
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-edit&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:34:59-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2223&quot;]&apos;)
Fri, 14 Jun 2019 14:35:00-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.53：以秒为单位
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="56" name="test_7_delete_job" time="18.238"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2223&quot;]&apos;)
Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2223&quot;]&apos;)
Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-hover_element-[line:71]None:元素：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2223&quot;]&apos;)鼠标悬停事件
Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[@class=&quot;fa fa-trash btn-del-business&quot;]&apos;)
Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[@class=&quot;fa fa-trash btn-del-business&quot;]&apos;)
Fri, 14 Jun 2019 14:35:10-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[@class=&quot;fa fa-trash btn-del-business&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:12-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:12-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:12-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:12-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//a[@id=&quot;btn-delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:14-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos; //span[text()=&quot;auto_test_2223&quot;]&apos;)
Fri, 14 Jun 2019 14:35:17-ERROR-BasePage.py-wait_eleVisible-[line:39]等待元素可见失败。
Fri, 14 Jun 2019 14:35:18-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-35-17.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="64" name="test_8_run_job_local" time="8.039"><failure message="AssertionError: assert ((1, &apos;Tom&apos;, 23, &apos;男&apos;),) == ()
  Left contains more items, first extra item: (1, &apos;Tom&apos;, 23, &apos;男&apos;)
  Use -v to get the full diff">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE443668&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_8_run_job_local(self,class_home):
        #操作步骤:发布，运行，查询表1、2，对比表2与表1，清空表2内容
        DoMysql().deletc_data()
        DesignerPage(class_home[0]).run_job(&apos;local&apos;)
        res = DoMysql().select_table_2()
&gt;       assert DoMysql().select_table_1()==res
E       AssertionError: assert ((1, &apos;Tom&apos;, 23, &apos;男&apos;),) == ()
E         Left contains more items, first extra item: (1, &apos;Tom&apos;, 23, &apos;男&apos;)
E         Use -v to get the full diff

TestCase\test_3_designer.py:70: AssertionError</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:35:18-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:18-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:18-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:18-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:19-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:19-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:35:19-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:19-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:21-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;本地运行&quot;]&apos;)
Fri, 14 Jun 2019 14:35:21-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:21-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;本地运行&quot;]&apos;)
Fri, 14 Jun 2019 14:35:21-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;本地运行&quot;]&apos;)点击事件
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="71" name="test_9_run_job_distributed" time="0.899"><failure message="selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span style=&quot;font-size:12px;&quot;&gt;...&lt;/span&gt; is not clickable at point (468, 37). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
  (Session info: headless chrome=74.0.3729.169)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE440748&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_9_run_job_distributed(self,class_home):
        #操作步骤:发布，运行，查询表1、2，对比表2与表1，清空表2内容
        DoMysql().deletc_data()
&gt;       DesignerPage(class_home[0]).run_job(&apos;no_local&apos;)

TestCase\test_3_designer.py:75: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:364: in run_job
    self.click_element(loc.publish_button)
Common\BasePage.py:87: in click_element
    ele.click()
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:80: in click
    self._execute(Command.CLICK_ELEMENT)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:628: in _execute
    return self._parent.execute(command, params)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:312: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000202FE418908&gt;
response = {&apos;sessionId&apos;: &apos;916b8ddf01da4244110972e01a4973a0&apos;, &apos;status&apos;: 64, &apos;value&apos;: {&apos;message&apos;: &apos;element click intercepted: Eleme...729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)&apos;}}

    def check_response(self, response):
        &quot;&quot;&quot;
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        &quot;&quot;&quot;
        status = response.get(&apos;status&apos;, None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get(&quot;message&quot;, &quot;&quot;)
        screen = response.get(&quot;screen&quot;, &quot;&quot;)
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get(&apos;value&apos;, None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value[&apos;value&apos;]
                    status = value.get(&apos;error&apos;, None)
                    if status is None:
                        status = value[&quot;status&quot;]
                        message = value[&quot;value&quot;]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get(&apos;message&apos;)
                    else:
                        message = value.get(&apos;message&apos;, None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == &apos;&apos; or value is None:
            value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == &quot;&quot; and &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if &apos;data&apos; in value:
                alert_text = value[&apos;data&apos;].get(&apos;text&apos;)
            elif &apos;alert&apos; in value:
                alert_text = value[&apos;alert&apos;].get(&apos;text&apos;)
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span style=&quot;font-size:12px;&quot;&gt;...&lt;/span&gt; is not clickable at point (468, 37). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
E         (Session info: headless chrome=74.0.3729.169)
E         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)

F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: ElementClickInterceptedException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:26-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:27-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:35:27-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-35-27.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="78" name="test_10_run_job_mysql_text_local" time="8.829"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:35:27-INFO-remote.py-cmd-[line:41]准备建立连接
Fri, 14 Jun 2019 14:35:27-INFO-transport.py-_log-[line:1746]Connected (version 2.0, client OpenSSH_5.3)
Fri, 14 Jun 2019 14:35:27-INFO-transport.py-_log-[line:1746]Authentication (password) successful!
Fri, 14 Jun 2019 14:35:27-INFO-remote.py-cmd-[line:47]准备执行命令:&gt; /user/liqitest/auto_text_01
Fri, 14 Jun 2019 14:35:28-INFO-remote.py-cmd-[line:49]
Fri, 14 Jun 2019 14:35:28-INFO-remote.py-cmd-[line:52]连接已经关闭
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@class=&quot;level0 &quot;]//span[text()=&quot;MySQL_text&quot;]&apos;)
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@class=&quot;level0 &quot;]//span[text()=&quot;MySQL_text&quot;]&apos;)
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@class=&quot;level0 &quot;]//span[text()=&quot;MySQL_text&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:28-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:30-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;本地运行&quot;]&apos;)
Fri, 14 Jun 2019 14:35:30-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;本地运行&quot;]&apos;)
Fri, 14 Jun 2019 14:35:30-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;本地运行&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:35-INFO-transport.py-_log-[line:1746]Connected (version 2.0, client OpenSSH_5.3)
Fri, 14 Jun 2019 14:35:35-INFO-transport.py-_log-[line:1746]Authentication (password) successful!
Fri, 14 Jun 2019 14:35:35-INFO-sftp.py-_log-[line:158][chan 0] Opened sftp connection (server version 3)
Fri, 14 Jun 2019 14:35:36-INFO-remote.py-get_file-[line:33]远程文件已经下载到本地
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="87" name="test_11_run_job_mysql_text_distributed" time="11.306"><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:35:39-INFO-remote.py-cmd-[line:41]准备建立连接
Fri, 14 Jun 2019 14:35:39-INFO-transport.py-_log-[line:1746]Connected (version 2.0, client OpenSSH_5.3)
Fri, 14 Jun 2019 14:35:39-INFO-transport.py-_log-[line:1746]Authentication (password) successful!
Fri, 14 Jun 2019 14:35:39-INFO-remote.py-cmd-[line:47]准备执行命令:&gt; /user/liqitest/auto_text_01
Fri, 14 Jun 2019 14:35:39-INFO-remote.py-cmd-[line:49]
Fri, 14 Jun 2019 14:35:39-INFO-remote.py-cmd-[line:52]连接已经关闭
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@class=&quot;level0 &quot;]//span[text()=&quot;MySQL_text&quot;]&apos;)
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@class=&quot;level0 &quot;]//span[text()=&quot;MySQL_text&quot;]&apos;)
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@class=&quot;level0 &quot;]//span[text()=&quot;MySQL_text&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:39-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;发布&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:41-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;分布运行&quot;]&apos;)
Fri, 14 Jun 2019 14:35:41-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:41-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;分布运行&quot;]&apos;)
Fri, 14 Jun 2019 14:35:41-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;分布运行&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:46-INFO-transport.py-_log-[line:1746]Connected (version 2.0, client OpenSSH_5.3)
Fri, 14 Jun 2019 14:35:47-INFO-transport.py-_log-[line:1746]Authentication (password) successful!
Fri, 14 Jun 2019 14:35:47-INFO-sftp.py-_log-[line:158][chan 0] Opened sftp connection (server version 3)
Fri, 14 Jun 2019 14:35:47-INFO-remote.py-get_file-[line:33]远程文件已经下载到本地
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="96" name="test_12_switch_job" time="1.145"><failure message="selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span class=&quot;select2-selection__rendered&quot; id=&quot;select2-business-select-container&quot; title=&quot;...&quot;&gt;not_delete&lt;/span&gt; is not clickable at point (923, 28). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
  (Session info: headless chrome=74.0.3729.169)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE4D5A90&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_12_switch_job(self,class_home):
&gt;       DesignerPage(class_home[0]).switch_job()

TestCase\test_3_designer.py:98: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:392: in switch_job
    self.click_element(loc.select_job_mysql)
Common\BasePage.py:87: in click_element
    ele.click()
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:80: in click
    self._execute(Command.CLICK_ELEMENT)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:628: in _execute
    return self._parent.execute(command, params)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:312: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000202FE418908&gt;
response = {&apos;sessionId&apos;: &apos;916b8ddf01da4244110972e01a4973a0&apos;, &apos;status&apos;: 64, &apos;value&apos;: {&apos;message&apos;: &apos;element click intercepted: Eleme...729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)&apos;}}

    def check_response(self, response):
        &quot;&quot;&quot;
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        &quot;&quot;&quot;
        status = response.get(&apos;status&apos;, None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get(&quot;message&quot;, &quot;&quot;)
        screen = response.get(&quot;screen&quot;, &quot;&quot;)
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get(&apos;value&apos;, None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value[&apos;value&apos;]
                    status = value.get(&apos;error&apos;, None)
                    if status is None:
                        status = value[&quot;status&quot;]
                        message = value[&quot;value&quot;]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get(&apos;message&apos;)
                    else:
                        message = value.get(&apos;message&apos;, None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == &apos;&apos; or value is None:
            value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == &quot;&quot; and &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if &apos;data&apos; in value:
                alert_text = value[&apos;data&apos;].get(&apos;text&apos;)
            elif &apos;alert&apos; in value:
                alert_text = value[&apos;alert&apos;].get(&apos;text&apos;)
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span class=&quot;select2-selection__rendered&quot; id=&quot;select2-business-select-container&quot; title=&quot;...&quot;&gt;not_delete&lt;/span&gt; is not clickable at point (923, 28). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
E         (Session info: headless chrome=74.0.3729.169)
E         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)

F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: ElementClickInterceptedException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:35:48-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;pull-left session&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:48-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:35:48-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//div[@class=&quot;pull-left session&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:48-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//div[@class=&quot;pull-left session&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:48-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//div[@class=&quot;pull-left session&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:35:48-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-35-48.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="101" name="test_13_unpub" time="62.035"><failure message="selenium.common.exceptions.TimeoutException: Message:">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE7D5A20&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    @pytest.mark.flaky(reruns=1, reruns_delay=10)
    def test_13_unpub(self,class_home):
        #操作步骤
        DesignerPage(class_home[0]).unpublish()
&gt;       msg = DesignerPage(class_home[0]).toast_text()

TestCase\test_3_designer.py:106: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:49: in toast_text
    self.wait_eleVisible(loc.job_toast)
Common\BasePage.py:35: in wait_eleVisible
    WebDriverWait(self.driver,timeout,poll_frequency).until(EC.visibility_of_element_located(loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;
method = &lt;selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000202FE7D5DA0&gt;
message = &apos;&apos;

    def until(self, method, message=&apos;&apos;):
        &quot;&quot;&quot;Calls the method provided with the driver as an argument until the \
        return value is not False.&quot;&quot;&quot;
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, &apos;screen&apos;, None)
                stacktrace = getattr(exc, &apos;stacktrace&apos;, None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

F:\Python\Python36\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;取消发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.04：以秒为单位
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;取消发布&quot;]&apos;)
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;取消发布&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:35:49-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:36:19-ERROR-BasePage.py-wait_eleVisible-[line:39]等待元素可见失败。
Fri, 14 Jun 2019 14:36:19-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-36-19.png
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.06：以秒为单位
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;取消发布&quot;]&apos;)
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;取消发布&quot;]&apos;)
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//span[text()=&quot;取消发布&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:36:30-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//div[@class=&quot;toast-message&quot;]&apos;)
Fri, 14 Jun 2019 14:37:00-ERROR-BasePage.py-wait_eleVisible-[line:39]等待元素可见失败。
Fri, 14 Jun 2019 14:37:00-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-37-00.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="108" name="test_14_pub" time="1.068"><failure message="selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
  (Session info: headless chrome=74.0.3729.169)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE82CD68&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_14_pub(self,class_home):
        #操作步骤
&gt;       DesignerPage(class_home[0]).publish()

TestCase\test_3_designer.py:111: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:409: in publish
    self.select_job(loc.not_delete_job)
PageObjects\designer_page.py:61: in select_job
    self.click_element(loc)
Common\BasePage.py:87: in click_element
    ele.click()
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:80: in click
    self._execute(Command.CLICK_ELEMENT)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:628: in _execute
    return self._parent.execute(command, params)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:312: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000202FE418908&gt;
response = {&apos;sessionId&apos;: &apos;916b8ddf01da4244110972e01a4973a0&apos;, &apos;status&apos;: 64, &apos;value&apos;: {&apos;message&apos;: &apos;element click intercepted: Eleme...729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)&apos;}}

    def check_response(self, response):
        &quot;&quot;&quot;
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        &quot;&quot;&quot;
        status = response.get(&apos;status&apos;, None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get(&quot;message&quot;, &quot;&quot;)
        screen = response.get(&quot;screen&quot;, &quot;&quot;)
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get(&apos;value&apos;, None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value[&apos;value&apos;]
                    status = value.get(&apos;error&apos;, None)
                    if status is None:
                        status = value[&quot;status&quot;]
                        message = value[&quot;value&quot;]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get(&apos;message&apos;)
                    else:
                        message = value.get(&apos;message&apos;, None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == &apos;&apos; or value is None:
            value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == &quot;&quot; and &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if &apos;data&apos; in value:
                alert_text = value[&apos;data&apos;].get(&apos;text&apos;)
            elif &apos;alert&apos; in value:
                alert_text = value[&apos;alert&apos;].get(&apos;text&apos;)
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
E         (Session info: headless chrome=74.0.3729.169)
E         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)

F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: ElementClickInterceptedException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:37:01-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:37:01-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:37:01-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:37:01-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:37:01-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:37:01-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-37-01.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="114" name="test_15_same_pub" time="1.846"><failure message="selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
  (Session info: headless chrome=74.0.3729.169)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE7F6550&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    @pytest.mark.flaky(reruns=1, reruns_delay=10)
    def test_15_same_pub(self,class_home):
        # 操作步骤
&gt;       DesignerPage(class_home[0]).publish()

TestCase\test_3_designer.py:118: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:409: in publish
    self.select_job(loc.not_delete_job)
PageObjects\designer_page.py:61: in select_job
    self.click_element(loc)
Common\BasePage.py:87: in click_element
    ele.click()
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:80: in click
    self._execute(Command.CLICK_ELEMENT)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:628: in _execute
    return self._parent.execute(command, params)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:312: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000202FE418908&gt;
response = {&apos;sessionId&apos;: &apos;916b8ddf01da4244110972e01a4973a0&apos;, &apos;status&apos;: 64, &apos;value&apos;: {&apos;message&apos;: &apos;element click intercepted: Eleme...729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)&apos;}}

    def check_response(self, response):
        &quot;&quot;&quot;
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        &quot;&quot;&quot;
        status = response.get(&apos;status&apos;, None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get(&quot;message&quot;, &quot;&quot;)
        screen = response.get(&quot;screen&quot;, &quot;&quot;)
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get(&apos;value&apos;, None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value[&apos;value&apos;]
                    status = value.get(&apos;error&apos;, None)
                    if status is None:
                        status = value[&quot;status&quot;]
                        message = value[&quot;value&quot;]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get(&apos;message&apos;)
                    else:
                        message = value.get(&apos;message&apos;, None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == &apos;&apos; or value is None:
            value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == &quot;&quot; and &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if &apos;data&apos; in value:
                alert_text = value[&apos;data&apos;].get(&apos;text&apos;)
            elif &apos;alert&apos; in value:
                alert_text = value[&apos;alert&apos;].get(&apos;text&apos;)
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
E         (Session info: headless chrome=74.0.3729.169)
E         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)

F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: ElementClickInterceptedException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:37:02-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:37:02-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:37:02-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:37:02-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:37:02-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:37:02-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-37-02.png
Fri, 14 Jun 2019 14:37:13-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:37:13-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:37:13-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:37:13-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:37:13-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:37:13-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-37-13.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="121" name="test_16_work_flow" time="45.214"><failure message="selenium.common.exceptions.TimeoutException: Message:">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE75F550&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_16_work_flow(self,class_home):
        #操作步骤：直接打开工作流网址，运行，断言
        class_home[0].get(dd.work_flow_url)
&gt;       DesignerPage(class_home[0]).run_work_flow()

TestCase\test_3_designer.py:125: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:418: in run_work_flow
    self.wait_eleVisible(loc.run_work_flow)
Common\BasePage.py:35: in wait_eleVisible
    WebDriverWait(self.driver,timeout,poll_frequency).until(EC.visibility_of_element_located(loc))
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.support.wait.WebDriverWait (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;
method = &lt;selenium.webdriver.support.expected_conditions.visibility_of_element_located object at 0x00000202FE75FD68&gt;
message = &apos;&apos;

    def until(self, method, message=&apos;&apos;):
        &quot;&quot;&quot;Calls the method provided with the driver as an argument until the \
        return value is not False.&quot;&quot;&quot;
        screen = None
        stacktrace = None
    
        end_time = time.time() + self._timeout
        while True:
            try:
                value = method(self._driver)
                if value:
                    return value
            except self._ignored_exceptions as exc:
                screen = getattr(exc, &apos;screen&apos;, None)
                stacktrace = getattr(exc, &apos;stacktrace&apos;, None)
            time.sleep(self._poll)
            if time.time() &gt; end_time:
                break
&gt;       raise TimeoutException(message, screen, stacktrace)
E       selenium.common.exceptions.TimeoutException: Message:

F:\Python\Python36\lib\site-packages\selenium\webdriver\support\wait.py:80: TimeoutException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:37:28-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//span[text()=&quot;运行&quot;]&apos;)
Fri, 14 Jun 2019 14:37:58-ERROR-BasePage.py-wait_eleVisible-[line:39]等待元素可见失败。
Fri, 14 Jun 2019 14:37:59-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-37-58.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="127" name="test_17_add_work_flow" time="6.169"><failure message="selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
  (Session info: headless chrome=74.0.3729.169)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE7EAF60&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_17_add_work_flow(self,class_home):
        #操作步骤，选择作业note_delete,点击展开，点击/鼠标悬浮工作流，点击添加按钮，弹窗输入工作流名称，输入内容，点击确定，断言
&gt;       DesignerPage(class_home[0]).add_work_flow(dd.work_flow_name)

TestCase\test_3_designer.py:130: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:438: in add_work_flow
    self.select_job(loc.not_delete_job)
PageObjects\designer_page.py:61: in select_job
    self.click_element(loc)
Common\BasePage.py:87: in click_element
    ele.click()
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:80: in click
    self._execute(Command.CLICK_ELEMENT)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:628: in _execute
    return self._parent.execute(command, params)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:312: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000202FE418908&gt;
response = {&apos;sessionId&apos;: &apos;916b8ddf01da4244110972e01a4973a0&apos;, &apos;status&apos;: 64, &apos;value&apos;: {&apos;message&apos;: &apos;element click intercepted: Eleme...729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)&apos;}}

    def check_response(self, response):
        &quot;&quot;&quot;
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        &quot;&quot;&quot;
        status = response.get(&apos;status&apos;, None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get(&quot;message&quot;, &quot;&quot;)
        screen = response.get(&quot;screen&quot;, &quot;&quot;)
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get(&apos;value&apos;, None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value[&apos;value&apos;]
                    status = value.get(&apos;error&apos;, None)
                    if status is None:
                        status = value[&quot;status&quot;]
                        message = value[&quot;value&quot;]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get(&apos;message&apos;)
                    else:
                        message = value.get(&apos;message&apos;, None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == &apos;&apos; or value is None:
            value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == &quot;&quot; and &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if &apos;data&apos; in value:
                alert_text = value[&apos;data&apos;].get(&apos;text&apos;)
            elif &apos;alert&apos; in value:
                alert_text = value[&apos;alert&apos;].get(&apos;text&apos;)
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
E         (Session info: headless chrome=74.0.3729.169)
E         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)

F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: ElementClickInterceptedException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:38:04-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:38:04-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:38:04-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:38:04-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:38:05-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:38:05-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-38-05.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="132" name="test_18_add_work_flow" time="5.142"><failure message="selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
  (Session info: headless chrome=74.0.3729.169)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE8A2E10&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_18_add_work_flow(self,class_home):
&gt;       DesignerPage(class_home[0]).add_work_flow(dd.work_flow_name)

TestCase\test_3_designer.py:134: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:438: in add_work_flow
    self.select_job(loc.not_delete_job)
PageObjects\designer_page.py:61: in select_job
    self.click_element(loc)
Common\BasePage.py:87: in click_element
    ele.click()
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:80: in click
    self._execute(Command.CLICK_ELEMENT)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:628: in _execute
    return self._parent.execute(command, params)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:312: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000202FE418908&gt;
response = {&apos;sessionId&apos;: &apos;916b8ddf01da4244110972e01a4973a0&apos;, &apos;status&apos;: 64, &apos;value&apos;: {&apos;message&apos;: &apos;element click intercepted: Eleme...729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)&apos;}}

    def check_response(self, response):
        &quot;&quot;&quot;
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        &quot;&quot;&quot;
        status = response.get(&apos;status&apos;, None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get(&quot;message&quot;, &quot;&quot;)
        screen = response.get(&quot;screen&quot;, &quot;&quot;)
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get(&apos;value&apos;, None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value[&apos;value&apos;]
                    status = value.get(&apos;error&apos;, None)
                    if status is None:
                        status = value[&quot;status&quot;]
                        message = value[&quot;value&quot;]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get(&apos;message&apos;)
                    else:
                        message = value.get(&apos;message&apos;, None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == &apos;&apos; or value is None:
            value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == &quot;&quot; and &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if &apos;data&apos; in value:
                alert_text = value[&apos;data&apos;].get(&apos;text&apos;)
            elif &apos;alert&apos; in value:
                alert_text = value[&apos;alert&apos;].get(&apos;text&apos;)
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
E         (Session info: headless chrome=74.0.3729.169)
E         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)

F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: ElementClickInterceptedException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
</system-out><system-err>Fri, 14 Jun 2019 14:38:10-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:38:10-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.03：以秒为单位
Fri, 14 Jun 2019 14:38:10-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:38:10-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:38:10-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:38:10-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-38-10.png
</system-err></testcase><testcase classname="TestCase.test_3_designer.TestDesigner" file="TestCase\test_3_designer.py" line="136" name="test_19_del_work_flow" time="3.234"><failure message="selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
  (Session info: headless chrome=74.0.3729.169)
  (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)">self = &lt;TestCase.test_3_designer.TestDesigner object at 0x00000202FE763CF8&gt;
class_home = [&lt;selenium.webdriver.chrome.webdriver.WebDriver (session=&quot;916b8ddf01da4244110972e01a4973a0&quot;)&gt;, &lt;PageObjects.login_page.LoginPage object at 0x00000202FE4189B0&gt;]

    def test_19_del_work_flow(self,class_home):
&gt;       DesignerPage(class_home[0]).delete_work_flow()

TestCase\test_3_designer.py:138: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
PageObjects\designer_page.py:460: in delete_work_flow
    self.select_job(loc.not_delete_job)
PageObjects\designer_page.py:61: in select_job
    self.click_element(loc)
Common\BasePage.py:87: in click_element
    ele.click()
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:80: in click
    self._execute(Command.CLICK_ELEMENT)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webelement.py:628: in _execute
    return self._parent.execute(command, params)
F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\webdriver.py:312: in execute
    self.error_handler.check_response(response)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = &lt;selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000202FE418908&gt;
response = {&apos;sessionId&apos;: &apos;916b8ddf01da4244110972e01a4973a0&apos;, &apos;status&apos;: 64, &apos;value&apos;: {&apos;message&apos;: &apos;element click intercepted: Eleme...729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)&apos;}}

    def check_response(self, response):
        &quot;&quot;&quot;
        Checks that a JSON response from the WebDriver does not have an error.
    
        :Args:
         - response - The JSON response from the WebDriver server as a dictionary
           object.
    
        :Raises: If the response contains an error message.
        &quot;&quot;&quot;
        status = response.get(&apos;status&apos;, None)
        if status is None or status == ErrorCode.SUCCESS:
            return
        value = None
        message = response.get(&quot;message&quot;, &quot;&quot;)
        screen = response.get(&quot;screen&quot;, &quot;&quot;)
        stacktrace = None
        if isinstance(status, int):
            value_json = response.get(&apos;value&apos;, None)
            if value_json and isinstance(value_json, basestring):
                import json
                try:
                    value = json.loads(value_json)
                    if len(value.keys()) == 1:
                        value = value[&apos;value&apos;]
                    status = value.get(&apos;error&apos;, None)
                    if status is None:
                        status = value[&quot;status&quot;]
                        message = value[&quot;value&quot;]
                        if not isinstance(message, basestring):
                            value = message
                            message = message.get(&apos;message&apos;)
                    else:
                        message = value.get(&apos;message&apos;, None)
                except ValueError:
                    pass
    
        exception_class = ErrorInResponseException
        if status in ErrorCode.NO_SUCH_ELEMENT:
            exception_class = NoSuchElementException
        elif status in ErrorCode.NO_SUCH_FRAME:
            exception_class = NoSuchFrameException
        elif status in ErrorCode.NO_SUCH_WINDOW:
            exception_class = NoSuchWindowException
        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:
            exception_class = StaleElementReferenceException
        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:
            exception_class = ElementNotVisibleException
        elif status in ErrorCode.INVALID_ELEMENT_STATE:
            exception_class = InvalidElementStateException
        elif status in ErrorCode.INVALID_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR \
                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:
            exception_class = InvalidSelectorException
        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:
            exception_class = ElementNotSelectableException
        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:
            exception_class = ElementNotInteractableException
        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:
            exception_class = InvalidCookieDomainException
        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:
            exception_class = UnableToSetCookieException
        elif status in ErrorCode.TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.SCRIPT_TIMEOUT:
            exception_class = TimeoutException
        elif status in ErrorCode.UNKNOWN_ERROR:
            exception_class = WebDriverException
        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:
            exception_class = UnexpectedAlertPresentException
        elif status in ErrorCode.NO_ALERT_OPEN:
            exception_class = NoAlertPresentException
        elif status in ErrorCode.IME_NOT_AVAILABLE:
            exception_class = ImeNotAvailableException
        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:
            exception_class = ImeActivationFailedException
        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:
            exception_class = MoveTargetOutOfBoundsException
        elif status in ErrorCode.JAVASCRIPT_ERROR:
            exception_class = JavascriptException
        elif status in ErrorCode.SESSION_NOT_CREATED:
            exception_class = SessionNotCreatedException
        elif status in ErrorCode.INVALID_ARGUMENT:
            exception_class = InvalidArgumentException
        elif status in ErrorCode.NO_SUCH_COOKIE:
            exception_class = NoSuchCookieException
        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:
            exception_class = ScreenshotException
        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:
            exception_class = ElementClickInterceptedException
        elif status in ErrorCode.INSECURE_CERTIFICATE:
            exception_class = InsecureCertificateException
        elif status in ErrorCode.INVALID_COORDINATES:
            exception_class = InvalidCoordinatesException
        elif status in ErrorCode.INVALID_SESSION_ID:
            exception_class = InvalidSessionIdException
        elif status in ErrorCode.UNKNOWN_METHOD:
            exception_class = UnknownMethodException
        else:
            exception_class = WebDriverException
        if value == &apos;&apos; or value is None:
            value = response[&apos;value&apos;]
        if isinstance(value, basestring):
            if exception_class == ErrorInResponseException:
                raise exception_class(response, value)
            raise exception_class(value)
        if message == &quot;&quot; and &apos;message&apos; in value:
            message = value[&apos;message&apos;]
    
        screen = None
        if &apos;screen&apos; in value:
            screen = value[&apos;screen&apos;]
    
        stacktrace = None
        if &apos;stackTrace&apos; in value and value[&apos;stackTrace&apos;]:
            stacktrace = []
            try:
                for frame in value[&apos;stackTrace&apos;]:
                    line = self._value_or_default(frame, &apos;lineNumber&apos;, &apos;&apos;)
                    file = self._value_or_default(frame, &apos;fileName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if line:
                        file = &quot;%s:%s&quot; % (file, line)
                    meth = self._value_or_default(frame, &apos;methodName&apos;, &apos;&lt;anonymous&gt;&apos;)
                    if &apos;className&apos; in frame:
                        meth = &quot;%s.%s&quot; % (frame[&apos;className&apos;], meth)
                    msg = &quot;    at %s (%s)&quot;
                    msg = msg % (meth, file)
                    stacktrace.append(msg)
            except TypeError:
                pass
        if exception_class == ErrorInResponseException:
            raise exception_class(response, message)
        elif exception_class == UnexpectedAlertPresentException:
            alert_text = None
            if &apos;data&apos; in value:
                alert_text = value[&apos;data&apos;].get(&apos;text&apos;)
            elif &apos;alert&apos; in value:
                alert_text = value[&apos;alert&apos;].get(&apos;text&apos;)
            raise exception_class(message, screen, stacktrace, alert_text)
&gt;       raise exception_class(message, screen, stacktrace)
E       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element &lt;span id=&quot;treeDemo_2_span&quot; class=&quot;node_name&quot;&gt;...&lt;/span&gt; is not clickable at point (70, 227). Other element would receive the click: &lt;div class=&quot;fixed laoding&quot; id=&quot;loadingBg&quot; style=&quot;background-color:rgba(0,0,0,0.8);position:fixed;top:0;left:0;width:100%;height:100%;right:0;bottom:0;z-index:1002;&quot;&gt;&lt;/div&gt;
E         (Session info: headless chrome=74.0.3729.169)
E         (Driver info: chromedriver=74.0.3729.6 (255758eccf3d244491b8a1317aa76e1ce10d57e9-refs/branch-heads/3729@{#29}),platform=Windows NT 10.0.17134 x86_64)

F:\Python\Python36\lib\site-packages\selenium\webdriver\remote\errorhandler.py:242: ElementClickInterceptedException</failure><system-out>============测试类中每个测试用例都执行一次的前置============
============测试类中每个测试用例都执行一次的前置============
============整个测试类只执行一次的后置======================
============session级别的会话=====结束=====================
</system-out><system-err>Fri, 14 Jun 2019 14:38:11-INFO-BasePage.py-wait_eleVisible-[line:32]None：等待元素可见：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:38:11-INFO-BasePage.py-wait_eleVisible-[line:37]等待时长0.02：以秒为单位
Fri, 14 Jun 2019 14:38:11-INFO-BasePage.py-get_Element-[line:45]None：查找元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)
Fri, 14 Jun 2019 14:38:11-INFO-BasePage.py-click_element-[line:85]None:元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件
Fri, 14 Jun 2019 14:38:11-ERROR-BasePage.py-click_element-[line:89]元素：(&apos;xpath&apos;, &apos;//ul[@id=&quot;treeDemo&quot;]//span[text()=&quot;not_delete&quot;]&apos;)点击事件失败
Fri, 14 Jun 2019 14:38:11-INFO-BasePage.py-save_webImgs-[line:142]截屏成功,图片路径为D:\YOYO\auto_web_echo_v1\TestResult\imgs/None_2019-06-14-14-38-11.png
</system-err></testcase></testsuite>